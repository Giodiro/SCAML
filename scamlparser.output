   0  $accept : %entry% $end

   1  main :
   2       | main top_level EOF

   3  top_level : glob_def
   4            | expr END

   5  arg_list :
   6           | arg_list VAR TYPEOF TYPE

   7  glob_def : LET VAR LP arg_list RP TYPEOF TYPE ASS expr END
   8           | LET VAR TYPEOF TYPE ASS expr END

   9  local_def : LET VAR LP arg_list RP TYPEOF TYPE ASS expr IN expr
  10            | LET VAR TYPEOF TYPE ASS expr IN expr

  11  expr : aexpr
  12       | local_def
  13       | IF aexpr THEN aexpr ELSE aexpr
  14       | LP expr list_aexpr RP

  15  aexpr : LP expr RP
  16        | VAR
  17        | LB word_list RB
  18        | INT
  19        | STRING
  20        | CONS
  21        | HEAD
  22        | TAIL
  23        | STRCOMP
  24        | STRAPP
  25        | EQ
  26        | PLUS
  27        | MINUS

  28  list_aexpr :
  29             | list_aexpr aexpr

  30  word_list :
  31            | word_list COMMA word

  32  word : WORD
  33       | EMPTY_WORD

  34  %entry% : '\001' main

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . main  (34)
	main : .  (1)

	.  reduce 1

	main  goto 3


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	main : main . top_level EOF  (2)
	%entry% : '\001' main .  (34)

	IF  shift 4
	LET  shift 5
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	$end  reduce 34

	top_level  goto 19
	glob_def  goto 20
	expr  goto 21
	local_def  goto 22
	aexpr  goto 23


state 4
	expr : IF . aexpr THEN aexpr ELSE aexpr  (13)

	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 24
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	aexpr  goto 25


state 5
	glob_def : LET . VAR LP arg_list RP TYPEOF TYPE ASS expr END  (7)
	glob_def : LET . VAR TYPEOF TYPE ASS expr END  (8)
	local_def : LET . VAR LP arg_list RP TYPEOF TYPE ASS expr IN expr  (9)
	local_def : LET . VAR TYPEOF TYPE ASS expr IN expr  (10)

	VAR  shift 26
	.  error


state 6
	aexpr : CONS .  (20)

	.  reduce 20


state 7
	aexpr : HEAD .  (21)

	.  reduce 21


state 8
	aexpr : TAIL .  (22)

	.  reduce 22


state 9
	aexpr : STRCOMP .  (23)

	.  reduce 23


state 10
	aexpr : STRAPP .  (24)

	.  reduce 24


state 11
	aexpr : EQ .  (25)

	.  reduce 25


state 12
	aexpr : PLUS .  (26)

	.  reduce 26


state 13
	aexpr : MINUS .  (27)

	.  reduce 27


state 14
	expr : LP . expr list_aexpr RP  (14)
	aexpr : LP . expr RP  (15)

	IF  shift 4
	LET  shift 27
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	expr  goto 28
	local_def  goto 22
	aexpr  goto 23


state 15
	aexpr : LB . word_list RB  (17)
	word_list : .  (30)

	.  reduce 30

	word_list  goto 29


state 16
	aexpr : INT .  (18)

	.  reduce 18


state 17
	aexpr : VAR .  (16)

	.  reduce 16


state 18
	aexpr : STRING .  (19)

	.  reduce 19


state 19
	main : main top_level . EOF  (2)

	EOF  shift 30
	.  error


state 20
	top_level : glob_def .  (3)

	.  reduce 3


state 21
	top_level : expr . END  (4)

	END  shift 31
	.  error


state 22
	expr : local_def .  (12)

	.  reduce 12


state 23
	expr : aexpr .  (11)

	.  reduce 11


state 24
	aexpr : LP . expr RP  (15)

	IF  shift 4
	LET  shift 27
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	expr  goto 32
	local_def  goto 22
	aexpr  goto 23


state 25
	expr : IF aexpr . THEN aexpr ELSE aexpr  (13)

	THEN  shift 33
	.  error


state 26
	glob_def : LET VAR . LP arg_list RP TYPEOF TYPE ASS expr END  (7)
	glob_def : LET VAR . TYPEOF TYPE ASS expr END  (8)
	local_def : LET VAR . LP arg_list RP TYPEOF TYPE ASS expr IN expr  (9)
	local_def : LET VAR . TYPEOF TYPE ASS expr IN expr  (10)

	TYPEOF  shift 34
	LP  shift 35
	.  error


state 27
	local_def : LET . VAR LP arg_list RP TYPEOF TYPE ASS expr IN expr  (9)
	local_def : LET . VAR TYPEOF TYPE ASS expr IN expr  (10)

	VAR  shift 36
	.  error


28: shift/reduce conflict (shift 37, reduce 28) on RP
state 28
	expr : LP expr . list_aexpr RP  (14)
	aexpr : LP expr . RP  (15)
	list_aexpr : .  (28)

	RP  shift 37
	CONS  reduce 28
	HEAD  reduce 28
	TAIL  reduce 28
	STRCOMP  reduce 28
	STRAPP  reduce 28
	EQ  reduce 28
	PLUS  reduce 28
	MINUS  reduce 28
	LP  reduce 28
	LB  reduce 28
	INT  reduce 28
	VAR  reduce 28
	STRING  reduce 28

	list_aexpr  goto 38


state 29
	aexpr : LB word_list . RB  (17)
	word_list : word_list . COMMA word  (31)

	RB  shift 39
	COMMA  shift 40
	.  error


state 30
	main : main top_level EOF .  (2)

	.  reduce 2


state 31
	top_level : expr END .  (4)

	.  reduce 4


state 32
	aexpr : LP expr . RP  (15)

	RP  shift 37
	.  error


state 33
	expr : IF aexpr THEN . aexpr ELSE aexpr  (13)

	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 24
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	aexpr  goto 41


state 34
	glob_def : LET VAR TYPEOF . TYPE ASS expr END  (8)
	local_def : LET VAR TYPEOF . TYPE ASS expr IN expr  (10)

	TYPE  shift 42
	.  error


state 35
	glob_def : LET VAR LP . arg_list RP TYPEOF TYPE ASS expr END  (7)
	local_def : LET VAR LP . arg_list RP TYPEOF TYPE ASS expr IN expr  (9)
	arg_list : .  (5)

	.  reduce 5

	arg_list  goto 43


state 36
	local_def : LET VAR . LP arg_list RP TYPEOF TYPE ASS expr IN expr  (9)
	local_def : LET VAR . TYPEOF TYPE ASS expr IN expr  (10)

	TYPEOF  shift 44
	LP  shift 45
	.  error


state 37
	aexpr : LP expr RP .  (15)

	.  reduce 15


state 38
	expr : LP expr list_aexpr . RP  (14)
	list_aexpr : list_aexpr . aexpr  (29)

	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 24
	RP  shift 46
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	aexpr  goto 47


state 39
	aexpr : LB word_list RB .  (17)

	.  reduce 17


state 40
	word_list : word_list COMMA . word  (31)

	EMPTY_WORD  shift 48
	WORD  shift 49
	.  error

	word  goto 50


state 41
	expr : IF aexpr THEN aexpr . ELSE aexpr  (13)

	ELSE  shift 51
	.  error


state 42
	glob_def : LET VAR TYPEOF TYPE . ASS expr END  (8)
	local_def : LET VAR TYPEOF TYPE . ASS expr IN expr  (10)

	ASS  shift 52
	.  error


state 43
	arg_list : arg_list . VAR TYPEOF TYPE  (6)
	glob_def : LET VAR LP arg_list . RP TYPEOF TYPE ASS expr END  (7)
	local_def : LET VAR LP arg_list . RP TYPEOF TYPE ASS expr IN expr  (9)

	RP  shift 53
	VAR  shift 54
	.  error


state 44
	local_def : LET VAR TYPEOF . TYPE ASS expr IN expr  (10)

	TYPE  shift 55
	.  error


state 45
	local_def : LET VAR LP . arg_list RP TYPEOF TYPE ASS expr IN expr  (9)
	arg_list : .  (5)

	.  reduce 5

	arg_list  goto 56


state 46
	expr : LP expr list_aexpr RP .  (14)

	.  reduce 14


state 47
	list_aexpr : list_aexpr aexpr .  (29)

	.  reduce 29


state 48
	word : EMPTY_WORD .  (33)

	.  reduce 33


state 49
	word : WORD .  (32)

	.  reduce 32


state 50
	word_list : word_list COMMA word .  (31)

	.  reduce 31


state 51
	expr : IF aexpr THEN aexpr ELSE . aexpr  (13)

	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 24
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	aexpr  goto 57


state 52
	glob_def : LET VAR TYPEOF TYPE ASS . expr END  (8)
	local_def : LET VAR TYPEOF TYPE ASS . expr IN expr  (10)

	IF  shift 4
	LET  shift 27
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	expr  goto 58
	local_def  goto 22
	aexpr  goto 23


state 53
	glob_def : LET VAR LP arg_list RP . TYPEOF TYPE ASS expr END  (7)
	local_def : LET VAR LP arg_list RP . TYPEOF TYPE ASS expr IN expr  (9)

	TYPEOF  shift 59
	.  error


state 54
	arg_list : arg_list VAR . TYPEOF TYPE  (6)

	TYPEOF  shift 60
	.  error


state 55
	local_def : LET VAR TYPEOF TYPE . ASS expr IN expr  (10)

	ASS  shift 61
	.  error


state 56
	arg_list : arg_list . VAR TYPEOF TYPE  (6)
	local_def : LET VAR LP arg_list . RP TYPEOF TYPE ASS expr IN expr  (9)

	RP  shift 62
	VAR  shift 54
	.  error


state 57
	expr : IF aexpr THEN aexpr ELSE aexpr .  (13)

	.  reduce 13


state 58
	glob_def : LET VAR TYPEOF TYPE ASS expr . END  (8)
	local_def : LET VAR TYPEOF TYPE ASS expr . IN expr  (10)

	IN  shift 63
	END  shift 64
	.  error


state 59
	glob_def : LET VAR LP arg_list RP TYPEOF . TYPE ASS expr END  (7)
	local_def : LET VAR LP arg_list RP TYPEOF . TYPE ASS expr IN expr  (9)

	TYPE  shift 65
	.  error


state 60
	arg_list : arg_list VAR TYPEOF . TYPE  (6)

	TYPE  shift 66
	.  error


state 61
	local_def : LET VAR TYPEOF TYPE ASS . expr IN expr  (10)

	IF  shift 4
	LET  shift 27
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	expr  goto 67
	local_def  goto 22
	aexpr  goto 23


state 62
	local_def : LET VAR LP arg_list RP . TYPEOF TYPE ASS expr IN expr  (9)

	TYPEOF  shift 68
	.  error


state 63
	local_def : LET VAR TYPEOF TYPE ASS expr IN . expr  (10)

	IF  shift 4
	LET  shift 27
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	expr  goto 69
	local_def  goto 22
	aexpr  goto 23


state 64
	glob_def : LET VAR TYPEOF TYPE ASS expr END .  (8)

	.  reduce 8


state 65
	glob_def : LET VAR LP arg_list RP TYPEOF TYPE . ASS expr END  (7)
	local_def : LET VAR LP arg_list RP TYPEOF TYPE . ASS expr IN expr  (9)

	ASS  shift 70
	.  error


state 66
	arg_list : arg_list VAR TYPEOF TYPE .  (6)

	.  reduce 6


state 67
	local_def : LET VAR TYPEOF TYPE ASS expr . IN expr  (10)

	IN  shift 63
	.  error


state 68
	local_def : LET VAR LP arg_list RP TYPEOF . TYPE ASS expr IN expr  (9)

	TYPE  shift 71
	.  error


state 69
	local_def : LET VAR TYPEOF TYPE ASS expr IN expr .  (10)

	.  reduce 10


state 70
	glob_def : LET VAR LP arg_list RP TYPEOF TYPE ASS . expr END  (7)
	local_def : LET VAR LP arg_list RP TYPEOF TYPE ASS . expr IN expr  (9)

	IF  shift 4
	LET  shift 27
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	expr  goto 72
	local_def  goto 22
	aexpr  goto 23


state 71
	local_def : LET VAR LP arg_list RP TYPEOF TYPE . ASS expr IN expr  (9)

	ASS  shift 73
	.  error


state 72
	glob_def : LET VAR LP arg_list RP TYPEOF TYPE ASS expr . END  (7)
	local_def : LET VAR LP arg_list RP TYPEOF TYPE ASS expr . IN expr  (9)

	IN  shift 74
	END  shift 75
	.  error


state 73
	local_def : LET VAR LP arg_list RP TYPEOF TYPE ASS . expr IN expr  (9)

	IF  shift 4
	LET  shift 27
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	expr  goto 76
	local_def  goto 22
	aexpr  goto 23


state 74
	local_def : LET VAR LP arg_list RP TYPEOF TYPE ASS expr IN . expr  (9)

	IF  shift 4
	LET  shift 27
	CONS  shift 6
	HEAD  shift 7
	TAIL  shift 8
	STRCOMP  shift 9
	STRAPP  shift 10
	EQ  shift 11
	PLUS  shift 12
	MINUS  shift 13
	LP  shift 14
	LB  shift 15
	INT  shift 16
	VAR  shift 17
	STRING  shift 18
	.  error

	expr  goto 77
	local_def  goto 22
	aexpr  goto 23


state 75
	glob_def : LET VAR LP arg_list RP TYPEOF TYPE ASS expr END .  (7)

	.  reduce 7


state 76
	local_def : LET VAR LP arg_list RP TYPEOF TYPE ASS expr . IN expr  (9)

	IN  shift 74
	.  error


state 77
	local_def : LET VAR LP arg_list RP TYPEOF TYPE ASS expr IN expr .  (9)

	.  reduce 9


State 28 contains 1 shift/reduce conflict.


32 terminals, 12 nonterminals
35 grammar rules, 78 states
